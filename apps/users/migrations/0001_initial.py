# Generated by Django 4.2.13 on 2024-05-25 12:45

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='SysGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_name', models.CharField(help_text='组(角色)名', max_length=100, unique=True, verbose_name='组(角色)名')),
                ('is_admin', models.BooleanField(default=False, help_text='是否系统管理员', verbose_name='是否系统管理员')),
                ('is_hidden', models.BooleanField(default=False, help_text='是否隐藏', verbose_name='是否隐藏')),
            ],
            options={
                'verbose_name': '用户组',
                'verbose_name_plural': '用户组',
                'db_table': 'sys_group',
            },
        ),
        migrations.CreateModel(
            name='SysOrganization',
            fields=[
                ('dept_id', models.AutoField(help_text='组织ID', primary_key=True, serialize=False, verbose_name='组织ID')),
                ('parent_id', models.IntegerField(default=0, help_text='父组织ID', verbose_name='父组织ID')),
                ('ancestors', models.CharField(blank=True, default='', help_text='祖级列表', max_length=50, null=True, verbose_name='祖级列表')),
                ('dept_name', models.CharField(blank=True, default='', help_text='组织名称', max_length=32, null=True, verbose_name='组织名称')),
                ('dept_alias', models.CharField(blank=True, default='', help_text='组织简称', max_length=32, null=True, verbose_name='组织简称')),
                ('order_num', models.IntegerField(default=0, help_text='显示顺序', verbose_name='显示顺序')),
                ('leader', models.CharField(blank=True, default=None, help_text='负责人', max_length=20, null=True, verbose_name='负责人')),
                ('phone', models.CharField(blank=True, default=None, help_text='联系电话', max_length=11, null=True, verbose_name='联系电话')),
                ('email', models.CharField(blank=True, default=None, help_text='邮箱', max_length=50, null=True, verbose_name='邮箱')),
                ('status', models.CharField(blank=True, default=1, help_text='组织状态(1正常 0停用)', max_length=1, null=True, verbose_name='部门状态')),
                ('del_flag', models.CharField(blank=True, default=0, help_text='删除标志(1代表删除 0代表存在)', max_length=1, null=True, verbose_name='删除标志')),
                ('create_by', models.CharField(blank=True, default='', help_text='创建者', max_length=64, null=True, verbose_name='创建者')),
                ('update_by', models.CharField(blank=True, default='', help_text='更新者', max_length=64, null=True, verbose_name='更新者')),
                ('create_time', models.DateTimeField(auto_now_add=True, help_text='创建时间', verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', verbose_name='更新时间')),
            ],
            options={
                'verbose_name': '组织架构表',
                'verbose_name_plural': '组织架构表',
                'db_table': 'sys_organization',
                'unique_together': {('parent_id', 'dept_name')},
            },
        ),
        migrations.CreateModel(
            name='SysUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('staff_code', models.CharField(help_text='员工编号', max_length=32, verbose_name='员工编号')),
                ('user_type', models.SmallIntegerField(choices=[(0, '普通账号'), (1, 'API账号')], default=0, help_text='账号类型', verbose_name='账号类型')),
                ('mobile', models.CharField(blank=True, default=None, help_text='手机号码', max_length=32, null=True, verbose_name='手机')),
                ('is_active', models.BooleanField(default=True, help_text='是否启用', verbose_name='是否启用')),
                ('update_time', models.DateTimeField(auto_now=True, help_text='更新时间', null=True, verbose_name='更新时间')),
                ('alias', models.CharField(blank=True, help_text='中文姓名', max_length=32, null=True, verbose_name='中文姓名')),
                ('first_login', models.BooleanField(default=True, help_text='是否第一次登陆', verbose_name='是否第一次登陆')),
                ('comment', models.TextField(blank=True, default=None, help_text='备注', null=True, verbose_name='备注')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organization', models.ManyToManyField(blank=True, help_text='所属组织', to='users.sysorganization', verbose_name='所属组织')),
                ('roles', models.ManyToManyField(blank=True, help_text='组名称', to='users.sysgroup', verbose_name='组名称')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户信息',
                'verbose_name_plural': '用户信息',
                'db_table': 'sys_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
